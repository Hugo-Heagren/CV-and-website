html {
    margin-right: 20%;
    margin-left: 20%;
    font-size: 14pt;
    font-family: georgia, serif, sans-serif;
    hyphens: auto;
}

/* * Variables */

/* Variable is useful for calling to inside the media query later */
:root {
    --default-title-size: 2.5em;
    --default-spacing-unit: 10px;
}

/* * General styling */

h2 {
    font-size: large;
}

p {
    text-align: justify;
    /* This seems to work the best */
    text-justify: initial;
    margin: 0px;
    /* All paragraphs which are preceded by another paragraph. */
    &:has(+ p) {
	margin-bottom: 1.2ex;
    }
}

blockquote {
    font-style: italic;
    border-left: 3px solid;
    /* Space between content and border */
    padding-left: 0.5em;
    hyphens: none;
    margin: 5px;
    &.display {
	margin-left: 30px;
	margin-top: 20px;
	margin-bottom: 20px;
    }

}

/*
   https://www.smashingmagazine.com/2020/03/setting-height-width-images-important-again/#how-css-interacts-with-element-widths-and-heights
   */
img {
    height: auto;
    width: auto;
}

/* Class for bits of text which give information about other bits of
   text. (definitions titles, etc.) */
.decoration {
    display: inline-block;
    font-weight: bold;
    font-size: small;
    hyphens: none;
}

/* * Structure & page Layout */

* {
    /* https://www.w3schools.com/html/html_responsive.asp */
    box-sizing: border-box;
}

/* Fix for minor scrolling issue */
html, body {
    margin-top: 0;
    margin-bottom: 0;
    padding-top: 0;
    padding-bottom: 0;
}

body {
    /* This is so that the footer stays *right* at the bottom.*/
    display: flex;
    flex-direction: column;
    /* Make the body take up the whole screen */
    height: 100vh;
    justify-content: space-between;
}

main {
    display: initial;
    /* Equivalent to:
       flex-grow: 1;
       flex-shrink: 0;
       flex-basis: auto;

       The effect is that the <main> element fills all the spare
       screen between the nav/header and the footer.
   */
    flex: 1 0 auto;
}

header {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
    margin-top: 40px;
    margin-bottom: 40px
}

footer {
    margin-top: var(--default-spacing-unit);
    margin-bottom: var(--default-spacing-unit);
    /* Positioning */
    flex-shrink: 0;
    /* Typography */
    font-size: 75%;
    text-align: center;
    hyphens: none;
    width: 40%;
    align-self: center;
}

/* Paragraph on the right */
.bio {
    margin-left: var(--default-spacing-unit);
    float: left;
    width: calc(50% - var(--default-spacing-unit));
 }

/* Picture on the left */
.portrait {
    margin-right: var(--default-spacing-unit);
    float: left;
    width: calc(50% - var(--default-spacing-unit));
}

/* * Navigation */

.title, .nav-bar {
    display: inline;
}

/* On big screens, hide the checkbox and label used for the mobile
   menu */
.menu-toggle, input[type='checkbox'] {
    display: none;
}

/* These are 'about right' */
.title { font-size: var(--default-title-size); }
.nav-bar { font-size: 1.5em; }

a {
    /* Ensure they're still blue after clicking */
    color: blue;
    text-decoration: none;
}

.title, .nav-item {
    color: inherit;
}

.nav-item:hover, .current  {
    text-decoration-line: underline;
    text-decoration-thickness: 3px;
}

.nav-item:not(:last-child) {
    margin-right: 20px;
}

/* * Research list */

dt.decoration {
    width: 40px;
}

/* ** Talk list */
/* Proper layout. Credit G-Cyrillius
   https://stackoverflow.com/q/79745022/14915848 */
dl.talk-list {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: baseline;
    row-gap: 15px;
    dd {
        margin-left: var(--default-spacing-unit);
        grid-column-start: 2;
    }
}

/* ** Article list */

/* TODO generalise this to the whole list?  */
.box {
    display: grid;
    grid-template-columns: auto auto 1fr;
    align-items: baseline;
    column-gap: var(--default-spacing-unit);
}

.article {
    /* display: flex; */
    margin-right: 0px;
    margin-left: 0px;
}

/* *** Collapsible abstracts */

.abstract-label, .abstract-label:after {
    text-transform: uppercase;
    whitespace: preserve nowrap;
}

.abstract-label:hover {
    text-decoration-line: underline;
    text-decoration-thickness: 2px;
    cursor: pointer;
}

/* NOTE We 'should' use the :open pseudo class here, but it isn't as
   widely supported as the [open] attribute selector. The "/" in the
   content marks alternative text, read out by a screenreader --
   effectively hiding the arrows in that case.
*/
/* TODO Maybe this needs some more looking at? Do the abstract buttons
   need better support? */
details:not([open]) .abstract-label::after {
    content: " ▸" / " closed";
}

details[open] .abstract-label::after {
    content: " ▾" / " open";
}

.abstract {
    text-align: justify;
    /* On desktop the textblock is wide enough that small differences in
       tracking/kerning are not noticeable, so it's nice to just not
       have any hyphenated text. */
    hyphens: none;
}

/* *** File icons */

.file-icon {
    /* display: inline-block; */
    /* This is a magic number which corresponds pretty much exactly to the
       distance between the top of one line of text, and the baseline
       of the following line. */
    height: 4.5ex;
    vertical-align: top;
}

/* * Teaching eval tables */

.bar {
    & tr {
	--labels-size: 300px;
    }

    & th {
	font-size: 80%;
	line-height: 0.9;
	text-align: left;
	font-weight: normal;
	hyphens: none;
    }

    & caption {
	font-style: italic;
    }

    /* table-leader is only visible on mobile, but I wanted it styled in
       the same way as the data labels, so that's declared here too.*/
    & .data, .table-leader {
	font-style: italic;
	padding-left: 3px;
	font-size: 90%
    }

    & .table-leader {
	text-align: left;
	/* Align the 'caption' leader with the labels */
	padding-left: 0pt;
    }

    & .data {
	font-style: italic;
    }

}

/* * Longer writing */

.footnotes::before {
    /* There has to be some content, otherwise it doesn't display. */
    content:" ";
    display: block;
    height: 3px;
    width: 100%;
    background: black;
    margin-top: calc(2* var(--default-spacing-unit));
    margin-bottom: calc(2* var(--default-spacing-unit));
}

/* Dynamic footnote highlighting */
@keyframes fade-alert {
    0% {
	background-color: bisque;
    }
    100% {
	background-color: inherit;
    }
}

:target {
    animation: fade-alert 3s;
}

/* Smooth scrolling! */
:root {
    scroll-behavior: smooth;
}


/* ** LaTeX logo */

/* https://tess.oconnor.cx/2007/08/tex-poshlet */
.latex-logo {
    sub, sup {
	text-transform: uppercase;
    }
    sup {
	font-size: 0.85em;
	vertical-align: 0.15em;
	margin-left: -0.36em;
	margin-right: -0.15em;
    }
    sub {
	vertical-align: -0.4ex;
	margin-left: -0.25em;
	margin-right: -0.125em;
    }
}

/* * Licensing */

/* Mostly taken from
   https://css-tricks.com/couple-takes-sticky-footer/#aa-there-is-flexbox
*/

.license {
    text-align: center;
}

.cc-image {
    height: 2.5ex;
    vertical-align: middle;
}


/* * Contact and ORCID */

#orcid-id, .email {
    font-family: monospace;
    white-space: nowrap;
}

/* This is an attempt to conform to
   https://info.orcid.org/documentation/integration-guide/orcid-id-display-guidelines/#h-compact-orcid-id */
#orcid-logo {
    vertical-align: middle;
    height: 24px;
    width: px;
}

/* * 404 */

.warning-container {
    text-align: center;
    hyphens: none;
}

/* REALLY BIG */
#four-oh-four { font-size: 15em; }

/* * Responsive design */

/* ** Portrait */
@media screen and (max-width: 900px) and (orientation: portrait) {
    .portrait, .bio {
	width: 100%;
	/* Remove previous margins */
	margin: 0px;
    }

    .portrait {
	margin-bottom: var(--default-spacing-unit);
    }

    html {
	margin-right: var(--default-spacing-unit);
	margin-left: var(--default-spacing-unit);
    }

    dd {
	padding-left: 5px;
    }

}

/* ** Landscape */
@media screen and (max-height: 900px) and (orientation: landscape) {
    html {
	margin-right: 10%;
	margin-left: 10%;
    }

    /* README!! The following rules might look a bit odd, but they are
       correct The point is to fix it so that the portrait displays on
       the left, the bio on the right, and all such that the bio text
       wraps under the portrait if it's long enough (rather than
       continuing in a column). This is achieved by making the bio
       full-width, then floating the portrait inside the text of the
       bio, and the recalculating the values of the margins. */

    /* This *additional* 20px account for the loss of the 20px margin-left
       in the bio (which has to have margin-left=0px, below, so that
       the left edge of the text is flush with the left edge of the
       picture. */
    .portrait {
	margin-right: calc(2 * var(--default-spacing-unit));
	margin-bottom: var(--default-spacing-unit);
    }
    
    .bio {
	margin-left: 0px;
	float: none;
	width: auto;
    }

}

/* ** General mobile things */
@media screen and (max-width: 900px) {

    /* (Show and) style the toggle switch */
    .menu-toggle {
	display: inline-block;
    }

    /* Hide nav-bar when checkbox not ticked */
    input[id='menu']:not(:checked)+.nav-bar {
	display: none;
    }
    
    .nav-item {
        /* Display vertically because mobile */
        display: block;
        width: 100%;
        text-align: right;
	/* We don't have to select just the ones which are followed by others,
	   because we also want to separate the top one from the
	   button above it. */
        margin-top: 1em;
	&:first-child {
	    margin-top: 0.5em;   
	}
	/* HACK I feel like this should 'really' be a margin, but I can't make
	   it work, so we're having this instead. */
	padding-right: 20px;
    }

    header {
	margin-top: var(--default-spacing-unit);
	margin-bottom: var(--default-spacing-unit);
	/* Keep the .title-bar block above the list navigation list */
	display: block;
    }

    footer { width: 100%; }

    #four-oh-four { font-size: 30vw; }

    ul, ol {
	/* This 'properly' aligns the left edge of the list with the left
           margin. See discussion here:
           https://stackoverflow.com/a/678006/14915848 */
	padding-left: 0px;
        /* TODO This is a magic number in Firefox. Work out the fine tuning
           for other browsers... */
	margin-left: 17px;
    }

/* ** Research list  */

    /* These two rules give what seems to me like 'correct' wrapping */
    .article-text {
	display: inline;
    }

    .article {
	display: block;
    }

    .abstract {
	text-align: justify;
	/* On mobile, the text block is small enough that the kerning/tracking
           differences introduced by hyphens: none; are too much, so
           we use hyphens here.*/
	hyphens: auto;
    }

    .file-icon {
	float: left;
    }

/* ** Charts  */

    .bar {
	/* make the labels a reasonable size */
	& tr {
	    --labels-size: 150px;
	}

	/* Turn numbers around (and make them slightly smaller) */
	& .data {
	    font-size: 60%;
	    transform: rotate(90deg) !important;
	    transform-origin: bottom right;
	}	
    }


/* ** Burger Menu */

    .title-bar {
	position: relative;
    }

    /* Responsive sizing. Not perfect, but close enough */
    .title { font-size: min(var(--default-title-size), 10vw) ;}

    .menu-toggle {
        position: absolute;
	top: 0;
	bottom: 0;
	right: 0;
        aspect-ratio: 1 / 1;
    }

    .burgerbox {
	fill: inherit;
    }

    /* This is a slightly pretentious hack, but it's very pleasing */
    .burgerbar {
	fill: inherit;
	filter: invert(100%);
    }

}
