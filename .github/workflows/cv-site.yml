name: build and deploy
on:
  workflow_dispatch:
  push:
    paths:
      # Site
      - "*.bib"
      - "*.py"
      - "*.html"
      - "*.css"
      - "assets/**"
      # CV/TeX
      - "*.tex"
      - "*.bib"
      - "*.cls"
      - "*.bbx"
      - "*.cbx"
      # Always run when this action changes
      - ".github/workflows/cv-site.yml"
env:
  OUT_DIR: '/tmp/site/'
  BIB_XML_FILE: '/tmp/cv.bltxml'
jobs:
  build-site:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install biber
        uses: teatimeguest/setup-texlive-action@v3
        with:
          packages: |
            biber
      - name: Generate BibLaTeX XML
        run: "biber --tool --output-format=biblatexml --output-file=${{ env.BIB_XML_FILE }} cv.bib"
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11.2"
          cache: 'pip'
      - run: "pip install -r requirements.txt"
      - run: "python build.py ${{ env.OUT_DIR }} ${{ env.BIB_XML_FILE }}"
      # Upload artifacts using actions/upload-pages-artifact
      - name: Upload static files as artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.OUT_DIR }}
  build-cv:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Git repo
        uses: actions/checkout@v4
      - name: Setup TeX Live
        uses: teatimeguest/setup-texlive-action@v3
        with:
          packages: |
            scheme-full
            orcidlink
      - name: First LaTeX run
        run: 'lualatex cv.tex'
      - name: Biber run
        run: 'biber cv'
      - name: Second LaTeX run
        run: 'lualatex cv.tex'
      - name: Final LaTeX run
        run: 'lualatex cv.tex'
      - name: Create output directory
        # This doesn't complain, because the runner environment is
        # created afresh for each job
        run: "mkdir ${{ env.OUT_DIR }}"
      - name: Move PDF to output dir
        run: "mv cv.pdf ${{ env.OUT_DIR }}/Hugo-Heagren-CV.pdf"
      - name: Upload output pdf as artefact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.OUT_DIR }}
  deploy-both:
    needs: [build-site, build-cv]
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - uses: actions/deploy-pages@v4